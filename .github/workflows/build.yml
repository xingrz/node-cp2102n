name: build

on:
  - push
  - pull_request

jobs:
  build-addon:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install build dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install cmake ninja-build pkg-config libusb-1.0-0-dev

      - name: Install build dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cmake ninja pkg-config libusb

      - name: Build addon
        run: |
          npm ci
          PREBUILD_DIR=prebuilds/$(node -p '`${process.platform}-${process.arch}`')
          mkdir -p $PREBUILD_DIR
          cp build/Release/cp2102n.node $PREBUILD_DIR/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilds
          path: prebuilds
          retention-days: 1

  build-ts:
    needs: build-addon
    runs-on: ubuntu-latest

    outputs:
      tarball: ${{ steps.build.outputs.tarball }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Download prebuilt artifacts
        uses: actions/download-artifact@v3
        with:
          name: prebuilds
          path: prebuilds

      - name: Build NPM package
        id: build
        run: |
          npm ci --ignore-scripts
          npm run build:ts
          echo "::set-output name=tarball::$(npm pack)"

      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.tarball }}
          path: ${{ steps.build.outputs.tarball }}
